/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package src;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;

/**
 *
 * @author bdrab
 */
public class UserBookViewGUI extends javax.swing.JFrame {
	
    /**
     * Creates new form UserEditBookGUI
     */
    public UserBookViewGUI(Inventory inv, Bookings books, Requests reqs, int user) {
        initComponents(inv, books, reqs, user);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents(Inventory inv, Bookings books, Requests reqs, int user) {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent event) {
            	UserMainGUI main = new UserMainGUI(inv, books, reqs, user);
            	main.setVisible(true);
            }
        });
        ArrayList<Booking> userReqs = reqs.search(user);
        ArrayList<Booking> userBooks = books.search(user);
        Object[][] tableArray = new Object[userReqs.size()+userBooks.size()][5];
        int i = 0;
        for(Booking b: userReqs) {
        	tableArray[i][0] = b.current();
        	tableArray[i][1] = false;
        	tableArray[i][2] = b.getStart().getTime().toString();
        	tableArray[i][3] = b.getEnd().getTime().toString();
        	tableArray[i][4] = b.getCar().getMake();
        	i++;
        }
        for(Booking b: userBooks) {
        	tableArray[i][0] = b.current();
        	tableArray[i][1] = true;
        	tableArray[i][2] = b.getStart().getTime().toString();
        	tableArray[i][3] = b.getEnd().getTime().toString();
        	tableArray[i][4] = b.getCar().getMake();
        	i++;
        }
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            tableArray,
            new String [] {
                "Current?", "Confirmed?", "Start Date", "End Date", "Make (Brand)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userReqs.addAll(userBooks);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        jButton1.setText("Edit Current Booking");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt, inv, books, reqs, user, userReqs);
            }
        });

        jLabel1.setText("Past and Present Bookings and Requests");

        jButton2.setText("Delete Current Booking");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt, inv, books, reqs, user, userReqs);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jButton1)
                        .addGap(113, 113, 113)
                        .addComponent(jButton2)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt, Inventory inv, Bookings books, Requests reqs, int user, ArrayList<Booking> activity) {                                         
    	if(!jTable1.getSelectionModel().isSelectionEmpty()) {
        	int index = jTable1.getSelectionModel().getLeadSelectionIndex();
        	if(activity.get(index).current()) {
	        	UserBookEditGUI bookCar = new UserBookEditGUI(inv, books, reqs, user, activity.get(index));
	        	this.dispose();
	        	bookCar.setVisible(true);
        	}
    	}
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt, Inventory inv, Bookings books, Requests reqs, int user, ArrayList<Booking> activity) {                                         
    	if(!jTable1.getSelectionModel().isSelectionEmpty()) {
        	int index = jTable1.getSelectionModel().getLeadSelectionIndex();
        	if(activity.get(index).current()) {
	        	reqs.remove(activity.get(index));
	        	books.delete(activity.get(index));
	        	ArrayList<Booking> userReqs = reqs.search(user);
	            ArrayList<Booking> userBooks = books.search(user);
	            Object[][] tableArray = new Object[userReqs.size()+userBooks.size()][5];
	            int i = 0;
	            for(Booking b: userReqs) {
	            	tableArray[i][0] = b.current();
	            	tableArray[i][1] = false;
	            	tableArray[i][2] = b.getStart().getTime().toString();
	            	tableArray[i][3] = b.getEnd().getTime().toString();
	            	tableArray[i][4] = b.getCar().getMake();
	            	i++;
	            }
	            for(Booking b: userBooks) {
	            	tableArray[i][0] = b.current();
	            	tableArray[i][1] = true;
	            	tableArray[i][2] = b.getStart().getTime().toString();
	            	tableArray[i][3] = b.getEnd().getTime().toString();
	            	tableArray[i][4] = b.getCar().getMake();
	            	i++;
	            }
	            jTable1.setModel(new javax.swing.table.DefaultTableModel(
	                tableArray,
	                new String [] {
	                    "Current?", "Confirmed?", "Start Date", "End Date", "Make (Brand)"
	                }
	            ) {
	                Class[] types = new Class [] {
	                    java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
	                };
	                boolean[] canEdit = new boolean [] {
	                    false, false, false, false, false
	                };

	                public Class getColumnClass(int columnIndex) {
	                    return types [columnIndex];
	                }

	                public boolean isCellEditable(int rowIndex, int columnIndex) {
	                    return canEdit [columnIndex];
	                }
	            });
        	}
    	}
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserBookViewGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserBookViewGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserBookViewGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserBookViewGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserBookViewGUI(null, null, null, -1).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration                   
}
